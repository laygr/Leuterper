class Range
{
	Number inferior;
	Number superior;

	Range(Number inferior, Number superior)
	{
		this.inferior = inferior;
		this.superior = superior;
	}
}

class Array[X]
{
	List[X] elements;
	List[Number] ms;
	Number k;

	Array(List[Range] ranges)
	{
		this.ms = new List[Number](ranges.count() + 1);

		//Calculo del total
		Number i = 0;
		Number total = 1;
		while i < ranges.count()
		{
			Range range = ranges.get(i);
			Number rangeSize = range.superior - range.inferior + 1;
			total *= rangeSize;
			i += 1;
		}

		//Calculo de las m's
		this.ms.set(0, total);
		i = 1;
		while i < ranges.count()
		{
			range = ranges.get(i-1);
			rangeSize = range.superior - range.inferior + 1;
			this.ms.set(i, this.ms.get(i-1) / rangeSize);
			i += 1;
		}
		
		//Calculo de la k
		this.k = 0;
		i = 0;
		while i < ranges.count()
		{
			this.k += ( this.ms.get(i+1) * ranges.get(i).inferior);
			i += 1;
		}

		//Creacion de la memoria
		this.elements = new List[X](total);

		return this;
	}

	X get(List[Number] indexes)
	{
		Number index = this.getIndexForIndexes(indexes);
		return this.elements.get(index);

	}
	Void set(List[Number] indexes, X element)
	{
		Number index = this.getIndexForIndexes(indexes);
		this.elements.set(index, element);
	}

	Number getIndexForIndexes(List[Number] indexes)
	{
		Number index = 0;
		Number i = 0;
		while i < this.ms.count()
		{
			index += ( indexes.get(i) * this.ms.get(i) );
			i += 1;
		}
		index -= this.k;
		return index;
	}

}

class MatrixNumber
{
	Array[Number] m;
	Number c;

	MatrixNumber(Number rows, Number columns)
	{
		this.c = -1;
		Range rInf = new Range(this.c, rows + this.c);
		Range rSup = new Range(this.c, columns + this.c);
		m = new Array({rInf, rSup}:Range);
	}

	Void set(Number row, Number column, Number value)
	{
		m.set({row + c, column + c}:Range, value);
		return null;
	}

	Number get(Number row, Number column)
	{
		return m.get({row + c, column + c}:Range);
	}

}


Void main(String arg)
{
	MatrixNumber m = new MatrixNumber(3, 3);
	m.set(0, 0, 0);
	m.set(0, 1, 1);
	m.set(0, 2, 2);

	m.set(1, 0, 3);
	m.set(1, 1, 4);
	m.set(1, 2, 5);

	m.set(2, 0, 6);
	m.set(2, 1, 7);
	m.set(2, 2, 8);

	write(m.m.toString());
}